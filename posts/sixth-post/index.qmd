---
title: "Webscraping"
description: "Functions from Lab 8"
author:
  - name: Jose Garcia
date: 2025-05-26
categories: [R]
draft: false
format:
  html:
    page-layout: full
    embed-resources: true
editor: source
---

> **Goal:** Scrape information from <https://www.cheese.com> to obtain a dataset of characteristics about different cheeses, and gain deeper insight into your coding process. ðŸª¤

Obtain the following information for **all** cheeses in the database:

-   cheese name
-   URL for the cheese's webpage (e.g., <https://www.cheese.com/gouda/>)
-   whether or not the cheese has a picture (e.g., [gouda](https://www.cheese.com/gouda/) has a picture, but [bianco](https://www.cheese.com/bianco/) does not).

```{r}
library(stringr)
library(rvest)

scrape_cheese <- function(total_pages) {
  
  cheese_data <- c()
  cheese_names <- c()
  cheese_img <- c()
  all_urls <- c()
  
  # loop through each page
  for (i in 1:total_pages) {
    
    # read each url
    url <- paste0("https://www.cheese.com/alphabetical/?per_page=100&page=", i)
    Sys.sleep(1)
    webpage <- read_html(url)
    
    # scrape webpage for cheese data
    data <- webpage |>
      html_elements("h3 a") |>
      html_attr("href") 
    
    # create and append each url
    url <- paste0("https://cheese.com", data)
    all_urls <- c(all_urls, url)
    
    # scrape for cheese names
    names <- webpage |>
      html_nodes("h3 a") |>
      html_text()
    
    # scrape for missing image identifier
    img <- webpage |>
      html_nodes(".product-item img") |>
      html_attr("class")
    
    # if image-missing, return TRUE
    missing_img <- !str_detect(img, "image-missing")
    
    # append data
    cheese_data <- c(cheese_data, data)
    cheese_names <- c(cheese_names, names)
    cheese_img <- c(cheese_img, missing_img)
      
  }
  
  # create data frame
  cheese_df <- data.frame(
    Name = cheese_names,
    URL = all_urls,
    Has_Picture = cheese_img,
    stringsAsFactors = FALSE
  )
  
  # reorder df by name
  cheese_df <- cheese_df[order(cheese_df$Name), ]
  
  return(cheese_df)
  
}

df <-scrape_cheese(5)

# using a map

scrape_cheese_page <- function(page_number) {
  Sys.sleep(1)  
  url <- paste0("https://www.cheese.com/alphabetical/?per_page=100&page=", page_number)
  webpage <- read_html(url)

  names <- webpage |> 
    html_nodes("h3 a") |> 
    html_text()
  
  data <- webpage |> 
    html_elements("h3 a") |>
    html_attr("href")
  url <- paste0("https://cheese.com", data)

  img <- webpage |> 
    html_nodes(".product-item img") |> 
    html_attr("class")
  
  missing_img <- !str_detect(img, "image-missing")

  tibble(
    Name = names,
    URL = url,
    Has_Picture = missing_img
  )
}

# map across page numbers
scrape_cheese <- function(total_pages) {
  map_dfr(1:total_pages, scrape_cheese_page) |>
    arrange(Name)
}

```
